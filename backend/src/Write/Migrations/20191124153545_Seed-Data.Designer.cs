// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Write;

namespace Write.Migrations
{
    [DbContext(typeof(WriteContext))]
    [Migration("20191124153545_Seed-Data")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Write.Pocos.Barbecue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Observation");

                    b.Property<decimal>("TotalAmount");

                    b.Property<int>("TotalParticipants");

                    b.Property<decimal>("TotalRaised");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("Id");

                    b.ToTable("Barbecues");
                });

            modelBuilder.Entity("Write.Pocos.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Participant");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfadef58-7e49-48a3-a5d9-3908ea697485"),
                            Name = "João ¯\\_(ツ)_/¯"
                        },
                        new
                        {
                            Id = new Guid("48c92f90-9e4a-4a9d-8e45-b18b7466538b"),
                            Name = "Alice"
                        },
                        new
                        {
                            Id = new Guid("c793f46a-d193-4135-9a0c-416c1969fb9d"),
                            Name = "Alexandre M."
                        },
                        new
                        {
                            Id = new Guid("cec8d6af-ee1c-4af5-bfac-eb9bafa71af8"),
                            Name = "Beto"
                        },
                        new
                        {
                            Id = new Guid("4ac5b952-7410-48d9-bed0-16a0abc58a9d"),
                            Name = "Diego B."
                        },
                        new
                        {
                            Id = new Guid("665003e4-a2f4-414e-a8bf-f7fbaab7899c"),
                            Name = "Diego P."
                        },
                        new
                        {
                            Id = new Guid("ab2ac39e-81a3-4a7f-ba9b-f549d1260103"),
                            Name = "Fernando"
                        },
                        new
                        {
                            Id = new Guid("8853e2af-055c-41d1-98e1-7d575ac349dc"),
                            Name = "Gabriel"
                        },
                        new
                        {
                            Id = new Guid("3b6a288b-42db-4703-b45d-ed61b7e2821c"),
                            Name = "Leonardo"
                        },
                        new
                        {
                            Id = new Guid("db23fc9f-d7ad-4e9f-a158-86aec07da5f0"),
                            Name = "Marcus J."
                        },
                        new
                        {
                            Id = new Guid("d76a955f-e147-4315-8420-9542afc0f836"),
                            Name = "Michele"
                        },
                        new
                        {
                            Id = new Guid("9d378fd2-40b7-401a-bae6-70da9a838d6c"),
                            Name = "Paulo"
                        },
                        new
                        {
                            Id = new Guid("b38f6363-8ede-4cff-8b77-7bfa5283dcab"),
                            Name = "Rafael S."
                        },
                        new
                        {
                            Id = new Guid("55b27271-9cfd-424e-a25e-8d602202f1c1"),
                            Name = "Ralf"
                        },
                        new
                        {
                            Id = new Guid("e1f4f4c7-d90b-4bab-8574-a5bf8ff55ea4"),
                            Name = "Roberta"
                        },
                        new
                        {
                            Id = new Guid("6da09535-93ee-42cf-96f7-25413b1e6eef"),
                            Name = "Ruan"
                        },
                        new
                        {
                            Id = new Guid("1788833b-35b0-4d06-8df7-6d7549a42c47"),
                            Name = "Thales"
                        },
                        new
                        {
                            Id = new Guid("87da9f96-5c8b-47da-b549-ddf948040efc"),
                            Name = "Wait"
                        });
                });

            modelBuilder.Entity("Write.Pocos.Presence", b =>
                {
                    b.Property<Guid>("BarbecueId");

                    b.Property<Guid>("ParticipantId");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Paid");

                    b.Property<decimal>("Value");

                    b.HasKey("BarbecueId", "ParticipantId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Presence");
                });

            modelBuilder.Entity("Write.Pocos.Presence", b =>
                {
                    b.HasOne("Write.Pocos.Barbecue", "Barbecue")
                        .WithMany("Presences")
                        .HasForeignKey("BarbecueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Write.Pocos.Participant", "Participant")
                        .WithMany("Presences")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
